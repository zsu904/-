import os
import pandas as pd
import matplotlib.pyplot as plt

os.chdir('C:/지수/2020-1/인공지능과 기계학습')
iris = pd.read_csv('iris.csv')

print(iris.head())

iris.loc[iris['species']=='virginica','species']=0
iris.loc[iris['species']=='versicolor','species']=1
iris.loc[iris['species']=='setosa','species']=2
iris = iris[iris['species']!=2]

X = iris[['sepal_length','sepal_width']].values.T
Y = iris[['species']].values.T
Y = Y.astype('uint8')

plt.scatter(X[0,:],X[1,:],c=Y[0,:],s=40,cmap=plt.cm.Spectral);
plt.title('IRIS DATA | Blue - Versicolor, Red - Virginica')
plt.xlabel('petal_length')
plt.ylabel('petal_width')
plt.show()


import seaborn as sns
import pandas as pd
import numpy as np

sns.set(style="ticks", color_codes=True)
iris = sns.load_dataset("iris")
g = sns.pairplot(iris, hue="species", palette="husl")


iris.info()
iris['species'].unique()


from sklearn.preprocessing import LabelEncoder

X = iris.iloc[:,0:4].values
y = iris.iloc[:,4].values

encoder = LabelEncoder()
y1 = encoder.fit_transform(y)
Y = pd.get_dummies(y1).values

print(Y)


from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,Y,
                                                   test_size=0.2,
                                                   random_state=1)
X_train.shape, X_test.shape, y_train.shape, y_test.shape


from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam

model = Sequential()

model.add(Dense(64, input_shape=(4,),activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dense(3, activation='softmax'))

model.compile(loss='categorical_crossentropy',
             optimizer='Adam',
             metrics=['accuracy'])

model.summary()


model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=100)
